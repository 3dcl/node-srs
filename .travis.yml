language: cpp

compiler:
 - gcc

env:
  matrix:
   - NODE_NVM_VERSION="0.10"
   - NODE_NVM_VERSION="0.8"
  global:
   - secure: J5pbPr7g29oKVLrGpKXUQQUV5TJpMf2/TkPZZXezZdO5ywR7M2PfFOUOqexKUylcLyLmEgDilSJhhTLHYz+wx42VPbCTB7Q3sSZdhM0RUXc5mO4BcRKoEUHkIy2Ibp6SbcfzupT/oELFLiZSiS2xojldVMoUAs8IzLGcYStO7Jc=
   - secure: 1cPR5S+Gg4JiA3j8cvjKxSY3AshM0inXzHB/i/7P/ZjnxdvQQuZ48lK0e3TFvXQVTbA0rWYYrwuo62Fb9fc9bA8hDoOU2aruoF6hcEyuAbG7ERGRRJO9g6XaZKW1G0yK18T+1X6OBP7eXNZEPxl0OqBL8l3MKO3vuGxR3+5VQ0A=

before_install:
 - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
 - export PATH=`pwd`/node_modules/.bin:$PATH
 # here we set up the node version on the fly based on the matrix value.
 # This is done manually so that it is easy to flip the 'language' to
 # objective-c in another branch (to run the same travis.yml on OS X)
 - git clone https://github.com/creationix/nvm.git ../.nvm
 - source ../.nvm/nvm.sh
 - nvm install $NODE_NVM_VERSION
 - nvm use $NODE_NVM_VERSION
 - node --version
 - npm --version
 - platform=$(uname -s | sed "y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/")
 - if [[ "$platform" == 'linux' ]]; then sudo apt-get -qq update; fi;

install:
 # test building from source
 - npm install aws-sdk
 - npm install --build-from-source
 - npm test
 - node-pre-gyp package testpackage
 - npm test
 - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then node-pre-gyp unpublish publish; fi;

before_script:
 # test publishing and installing from remote if
 # [publish binary] is present in commit message
 - PUBLISH_BINARY=false
 - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then echo yes;PUBLISH_BINARY=true; fi;
 - if [[ $PUBLISH_BINARY == true ]]; then node-pre-gyp publish info; rm -rf {build,lib/binding}; npm install --fallback-to-build=false; npm test; fi

script:
 # test building with against shared libzip
 - make clean
 - node-pre-gyp clean
 - rm -rf lib/binding
 - if [[ "$platform" == 'linux' ]]; then sudo apt-get -qq install libgdal1-dev; npm install --build-from-source --shared_gdal; fi
 - if [[ "$platform" == 'darwin' ]]; then brew install libzip; npm install --build-from-source --shared_libzip --shared_libzip_includes=`brew --prefix`/include --shared_libzip_libpath=`brew --prefix`/lib; fi
 # crashing for some reason on travis os x
 #- npm test

after_success:
 # if success then query and display all published binaries
 - node-pre-gyp info